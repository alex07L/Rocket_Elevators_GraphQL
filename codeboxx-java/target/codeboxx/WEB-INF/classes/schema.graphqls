type Address {
  id: Int!
  street: String
  suite: String
  city: String
  postalCode: String
  country: String
}
type Building_detail{
	key: String
	value: String
}

type Intervention {
	id: Int!
	customer_id: Int
	author_id: Int
	building_id: Int
    start_intervention: String
    end_intervention: String
    employee_id: Int
    battery_id: Int
    column_id: Int
    elevator_id: Int
    status: String
    result: String
    rapport: String
	build: Build
    address: Address
}

type Customer {
	id: Int
	entrepriseName: String
	nameContact: String
	cellPhone: String
	email: String
	description: String
	authorityName: String
	authorityPhone: String
	authorityEmail: String
	address: Address
}
type Employee {
	id: Int!
	firstName: String
	lastName: String
	email: String
	title: String
	interventions: [Intervention]
}
type Building {
	id: Int!
	address: Address
	customer: Customer
	interventions: [Intervention]
}
type Build {
	id: Int!
	fullName: String
	email: String
	cellPhone: String
	techName: String
	techEmail: String
	techPhone: String
	address: Address
	customer_id: Int
	building_details: [Building_detail]
}

type Battery {
	id: Int!
	build_id: Int
	status: String
}

type Column {
	id: Int!
	battery_id: Int
	status: String
}

type Lead {
	id: Int!
	fullName: String
	entrepriseName: String
	cellPhone: String
	projectName: String
	description: String
	type: String
}

type Elevator {
	id: Int
	status: String
	serialNumber: String
	inspectionDate: String
	installDate: String
	certificat: String
	information: String
	note: String
	type: String
	column_id: Int
	category_id: Int
}

type Cx{
	build: [Build]
	battery: [Battery]
	column: [Column]
	elevator: [Elevator]
}

type Query {
  intervention(id:Int!): Intervention
  buildings(id: Int!): Building
  employee(id: Int!): Employee
  interventionList: [Intervention]
  battery(id: Int!): Battery
  column(id: Int!): Column
  elevatorList: [Elevator]
  elevator(id: Int!): Elevator
  buildList: [Build]
  leads: [Lead]
  customer(email: String!): Customer
  cxbyCustomer(email: String!): Cx
  addressbyCustomer(email: String!): [Address]
  address(id: Int!): Address
}

type Mutation {
	updateIntervention(id: Int!, status: String!): Intervention
	updateElevator(id: Int!, status: String!): Elevator
	updateColumn(id: Int!, status: String!): Column
	updateBattery(id: Int!, status: String!): Battery
	addIntevention(customer: String!, build: Int!, battery: Int!, column: Int!, elevator: Int!, description: String!): Intervention
	UpdateAddress(id: Int!, street: String!, suite: String!, city: String!, postalCode: String!, country: String!): Address
}

schema {
  query: Query
  mutation: Mutation
}
